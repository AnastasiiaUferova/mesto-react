{"ast":null,"code":"export default class Api {\n  constructor(_ref) {\n    let {\n      address,\n      token\n    } = _ref;\n\n    this._handleResponse = response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return Promise.reject(`Ошибка: ${response.status}`);\n    };\n\n    this._address = address;\n    this._token = token;\n  }\n\n  getCards() {\n    return fetch(`${this._address}/cards`, {\n      method: \"GET\",\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._handleResponse);\n  }\n\n  addCard(data) {\n    return fetch(this._address + \"/cards\", {\n      method: \"POST\",\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._handleResponse);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._address}/users/me`, {\n      method: \"GET\",\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._handleResponse);\n  }\n\n  changeUserInfo(data) {\n    return fetch(`${this._address}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._handleResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._address}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._handleResponse);\n  }\n\n  changeAvatar(data) {\n    return fetch(`${this._address}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._handleResponse);\n  }\n\n  setLike(cardId) {\n    return fetch(`${this._address}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(this._handleResponse);\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._address}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(this._handleResponse);\n  }\n\n}","map":{"version":3,"sources":["/Users/anastasiauferova/dev/mesto-react/mesto-react/src/utils/Api.js"],"names":["Api","constructor","address","token","_handleResponse","response","ok","json","Promise","reject","status","_address","_token","getCards","fetch","method","headers","authorization","then","addCard","data","body","JSON","stringify","name","link","getUserInfo","changeUserInfo","about","deleteCard","cardId","changeAvatar","avatar","setLike","deleteLike"],"mappings":"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","sourcesContent":["export default class Api {\n    constructor({ address, token }) {\n        this._address = address;\n        this._token = token;\n    }\n\n    _handleResponse = (response) => {\n        if (response.ok) {\n            return response.json();\n        }\n        return Promise.reject(`Ошибка: ${response.status}`);\n    }\n\n    getCards() {\n        return fetch(`${this._address}/cards`, {\n            method: \"GET\",\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json',\n            },\n        })\n            .then(this._handleResponse);\n    }\n\n    addCard(data) {\n        return fetch(this._address + \"/cards\", {\n            method: \"POST\",\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            }),\n        })\n            .then(this._handleResponse)\n    }\n\n    getUserInfo () {\n        return fetch(`${this._address}/users/me`, {\n            method: \"GET\",\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json',\n            },\n        })\n        .then(this._handleResponse);\n    }\n\n    changeUserInfo (data) {\n        return fetch(`${this._address}/users/me`, {\n        method: \"PATCH\",\n        headers: {\n            authorization: this._token,\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            name: data.name,\n            about: data.about,\n        })\n    })\n    .then(this._handleResponse);\n    \n    }\n\n\n    deleteCard(cardId) {\n        return fetch (`${this._address}/cards/${cardId}`, {\n        method: \"DELETE\",\n        headers: {\n            authorization: this._token\n        }}).then(this._handleResponse);\n    }\n\n    changeAvatar(data) {\n        return fetch(`${this._address}/users/me/avatar`, {\n        method: \"PATCH\",\n        headers: {\n            authorization: this._token,\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            avatar: data.avatar\n        })\n    })\n    .then(this._handleResponse);\n    \n}\n\nsetLike(cardId) {\n    return fetch(`${this._address}/cards/likes/${cardId}`, {\n        method: 'PUT',\n        headers: {\n            authorization: this._token,\n            \"Content-Type\": \"application/json\",\n        },\n    }).then(this._handleResponse);\n}\n\n\ndeleteLike(cardId) {\n    return fetch(`${this._address}/cards/likes/${cardId}`, {\n    method: 'DELETE',\n    headers: {\n        authorization: this._token,\n        \"Content-Type\": \"application/json\",\n    },\n    }).then(this._handleResponse);\n\n}}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}